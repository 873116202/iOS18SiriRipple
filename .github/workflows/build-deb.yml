name: Build iOS18SiriRipple.deb

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-deb:
    runs-on: macos-latest
    timeout-minutes: 30
    
    steps:
    # 1. 检出代码
    - name: Checkout code
      uses: actions/checkout@v4
      
    # 2. 环境诊断
    - name: Diagnostic information
      run: |
        echo "##[group]🛠️ 环境诊断"
        echo "工作目录: $(pwd)"
        echo "Xcode版本: $(xcodebuild -version)"
        echo "可用SDK:"
        xcodebuild -showsdks
        echo "项目结构:"
        ls -la
        echo "##[endgroup]"
      
    # 3. 安装必要工具
    - name: Install build tools
      run: |
        brew update
        # 安装必要工具
        brew install dpkg ldid
      
    # 4. 设置开发环境
    - name: Setup environment
      run: |
        # 设置Xcode路径
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        
        # 创建缓存清理脚本
        cat > clean_cache.sh <<EOF
        #!/bin/bash
        echo "清理构建缓存..."
        rm -rf build_output
        rm -rf ~/Library/Developer/Xcode/DerivedData/*
        rm -rf ~/Library/Caches/com.apple.dt.Xcode/*
        echo "✅ 缓存清理完成"
        EOF
        chmod +x clean_cache.sh
        
        # 确保日志目录存在
        mkdir -p logs
      
    # 5. 编译项目（使用参数覆盖设置）
    - name: Build project
      run: |
        # 清理缓存
        ./clean_cache.sh
        
        cd iOS18SiriRipple
        
        # 编译命令 - 使用参数覆盖设置
        set -x  # 开启详细日志
        xcodebuild clean build \
          -project iOS18SiriRipple.xcodeproj \
          -scheme iOS18SiriRipple \
          -configuration Release \
          -sdk iphoneos \
          ARCHS=arm64 \
          VALID_ARCHS=arm64 \
          SDKROOT=iphoneos \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          -derivedDataPath ../build_output \
          | tee ../xcodebuild.log
        set +x  # 关闭详细日志
        
        # 验证编译产物
        BINARY_PATH="../build_output/Build/Products/Release-iphoneos/iOS18SiriRipple.framework/iOS18SiriRipple"
        if [ ! -f "$BINARY_PATH" ]; then
          echo "::error::❌ 编译产物不存在"
          echo "构建日志:"
          cat
